1.รูปแบบของการนิยามฟังก์ชัน
  ฟังชั่นจะมี Function header และ Function body
  เช่น return-value-type function-name (parameter-list) //นี่คือ Function header
    {
       declarations              //ส่วนที่อยู่ในปีกกาคือ Function body
       statement
       :
    }

#####################################################################

2.Function Prototypes
  มีลักษณะเหมือน Function header parameterlist สามารถละชื่อตัวแปรได้ 
  แต่ไม่สามารถละประเภทข้อมูลได้
  เช่น int isEven(int);


#####################################################################

3.Function Call - Call by Value
  การส่งผ่านข้อมูลผ่าน parameter ไปยังฟังก์ชั่นเรียกว่า Pass by value การส่งค่าแบบนี้
  ฟังก์ชั่นส์จะเก็บค่าข้อมูลแค่ตัวที่ถูกส่งเข้า และจะเป็นค่านี้แค่ในฟังก์ชั่นที่ทำงาน 
  ภาษา c มีการส่งค่าผ่าน parameter แบบเดียว คือ pass by value

#####################################################################

4.Return Values
  ฟังก์ชั่นจะต้องส่งค่ากลับ หรือ ถ้าไม่ส่งค่ากลับ ไช่ void เพื่อบอกว่าจะไม่มีการส่งค่ากลับ
  เมื่อโปรแกรมไปเจอคำสั่ง return ที่อยู่ในฟังก์ชั่น โปรแกรมจกลับไปทำงานต่อจากจุดที่
  ฟังก์ชั่นถูกเรียกใช้
  เช่น int is even(valu){
      return 1;
      }
      ค่าที่ได้จากฟังก์ชั่นามารถส่งผ่าน parameter ไปใช้อีกฟังก์ชั่นได้

 #####################################################################

 5.Recursion 
   ฟังชันส์ที่เรียกใช้ตนเองได้ และมีค่าตัวแปรต่างๆเป็นอิสระจากการใช้ก่อนหน้า
   เช่น Fibonacci series
   Local varaible
   ตัวแปรที่ถูกประกาศใน block ใช้ได้แค่ในฟังก์ชั่น
   Global Variables
   ตัวแปรที่ประกาศอยู่นอกฟังก์ชั่นส์ 

#####################################################################  

6.Function Call และ Stack Frames
  stack frame เกิดจากฟังชั่นสร้างขึ้นเพื่อจัดเก็บข้อมูลตัวแปร parameter และ Local
  ที่อยู่ในฟังก์ชั่น 
  return address เป็นตำแหน่งของฟังก์ชั่นเมื่อทำงานเสร็จ

#####################################################################    
